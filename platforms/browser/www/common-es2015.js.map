{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./src/app/services/notes.service.ts","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAU;;AAUN,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAS6B,sDAAO,EAAgB,+DAAU;GARnD,YAAY,CAsJxB;AAtJwB;AAuJzB,SAAS;;;;;;;;;;;;;ACrKT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI","file":"common-es2015.js","sourcesContent":["const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\nimport { Note } from '../interfaces/note';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Urls} from '../constants/urls';\nimport {not} from 'rxjs/internal-compatibility';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesService {\n\n  public notes: Note[] = [];\n  public nuut: Note;\n  public loaded = false;\n\n\n\n  constructor(private storage: Storage, private http: HttpClient ) {\n\n  }\n/*\n  getAll(): Observable<Note[]>{\n  //  return this.http.get<Note[]>(Urls.allNotes);  ci servirà più avanti\n    return of(this.notes); // \"of\" converte array in uno stream di dati\n  }\n*/\n\n  load(): Promise<boolean> {\n\n    // Return a promise so that we know when this operation has completed\n    return new Promise((resolve) => {\n     // this.http.get('http://localhost:8080/note/all').subscribe(result => this.notes = result));\n      // Get the notes that were saved into storage\n  this.http.get('http://localhost:8080/note/all').subscribe(response => console.log(response));\n  this.getAllNote().subscribe(result => console.log(result));\n  this.storage.get('notes').then((notes) => console.log(notes));\n\n      // this.http.get('http://localhost:8080/note/all').subscribe(result => this.notes  = result);\n  /*this.storage.get('notes').then((notes) => {\n\n\n        // Only set this.notes to the returned value if there were values stored\n      if (notes != null){\n          this.notes = notes;\n        }\n    // this.getAllNote().subscribe(result => this.notes  = result) ;\n    // This allows us to check if the data has been loaded in or not\n      this.loaded = true;\n      resolve(true);\n\n    });*/\n\n\n  this.getAllNote().subscribe(result => {\n\n\n        // Only set this.notes to the returned value if there were values stored\n        if (result != null){\n          this.notes = result;\n        }\n        // this.getAllNote().subscribe(result => this.notes  = result) ;\n        // This allows us to check if the data has been loaded in or not\n        this.loaded = true;\n        resolve(true);\n\n      });\n\n\n    });\n\n  }\n\n  save(): void {\n    // Save the current array of notes to storage\n    this.storage.set('notes', this.notes);\n    this.load();\n  }\n\ngetAllNote(): Observable < Note[] > {\n  return this.http.get<Note[]>('http://localhost:8080/note/all');\n}\n\n\n\n  getNote(id): Observable<Note> {\n    // Return the note that has an id matching the id passed in\n    // console.log(this.http.get('http://localhost:8080/note/all'));\n    // tslint:disable-next-line:prefer-const\n\n    return this.http.get<Note>('http://localhost:8080/note/all/' + id);\n    // return this.notes.find(note => note.id === id);\n  }\n/*\n  createNote(title, content): void {\n\n    // Create a unique id that is one larger than the current largest id\n    // tslint:disable-next-line:radix\n    const id = Math.max(...this.notes.map(note => parseInt(note.id)), 0) + 1;\n\n    this.notes.push({\n      id: id.toString(),\n      title,\n      content: ''\n    });\n\n    this.save();\n\n  }\n*/\n\n  createNote(title: string, content: string, color: string): void {\n\n    // Create a unique id that is one larger than the current largest id\n    // tslint:disable-next-line:radix\n    const id = Math.max(...this.notes.map(note => parseInt(note.id)), 0) + 1;\n\n    this.notes.push({\n      id_user: '',\n      id: id.toString(),\n      title,\n      content, color\n\n    });\n\n    this.save();\n    console.log('ok') ;\n    // mettere color e id\n    // this.http.post('http://localhost:8080/note/add?title=' + title + '\n    // &content=' + content + '&user=lor'+ &color=' + color + '&id='+id , '').\n\n    this.http.post('http://localhost:8080/note/add?title=' + title + '&content=' + content + '&user=lor' + '&color=' + color, '').\n    subscribe(response => console.log(response));\n  }\n\n  deleteNote(id): void {\n\n    // Get the index in the array of the note that was passed in\n\n    console.log(id) ;\n\n    this.http.delete('http://localhost:8080/note?id=' + (id)).subscribe(response => console.log(response));\n  /*  {\n      console.log(data);\n      this.result = data;\n    }, error =>\n    {\n      console.log(error);\n    }, () =>\n    {\n      console.log('complete!');\n    });*/\n// localhost:8080/note?id=2\n    // Delete that element of the array and resave the data\n\n    this.save();\n }\n\n\n\n}\n// prova2\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n"],"sourceRoot":"webpack:///"}