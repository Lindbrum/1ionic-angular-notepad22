{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///src/app/services/notes.service.ts","webpack:///node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js"],"names":["spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","style","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","el","closest","createColorClasses","color","length","undefined","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","test","router","document","querySelector","preventDefault","push","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","NotesService","storage","http","notes","loaded","get","subscribe","response","console","log","getAllNote","result","then","set","load","id","title","content","max","note","parseInt","id_user","toString","save","post","providedIn","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"mappings":"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","file":"common-es5.js","sourcesContent":["const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\nimport { Note } from '../interfaces/note';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Urls} from '../constants/urls';\nimport {not} from 'rxjs/internal-compatibility';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesService {\n\n  public notes: Note[] = [];\n  public nuut: Note;\n  public loaded = false;\n\n\n\n  constructor(private storage: Storage, private http: HttpClient ) {\n\n  }\n/*\n  getAll(): Observable<Note[]>{\n  //  return this.http.get<Note[]>(Urls.allNotes);  ci servirà più avanti\n    return of(this.notes); // \"of\" converte array in uno stream di dati\n  }\n*/\n\n  load(): Promise<boolean> {\n\n    // Return a promise so that we know when this operation has completed\n    return new Promise((resolve) => {\n     // this.http.get('http://localhost:8080/note/all').subscribe(result => this.notes = result));\n      // Get the notes that were saved into storage\n  this.http.get('http://localhost:8080/note/all').subscribe(response => console.log(response));\n  this.getAllNote().subscribe(result => console.log(result));\n  this.storage.get('notes').then((notes) => console.log(notes));\n\n      // this.http.get('http://localhost:8080/note/all').subscribe(result => this.notes  = result);\n  /*this.storage.get('notes').then((notes) => {\n\n\n        // Only set this.notes to the returned value if there were values stored\n      if (notes != null){\n          this.notes = notes;\n        }\n    // this.getAllNote().subscribe(result => this.notes  = result) ;\n    // This allows us to check if the data has been loaded in or not\n      this.loaded = true;\n      resolve(true);\n\n    });*/\n\n\n  this.getAllNote().subscribe(result => {\n\n\n        // Only set this.notes to the returned value if there were values stored\n        if (result != null){\n          this.notes = result;\n        }\n        // this.getAllNote().subscribe(result => this.notes  = result) ;\n        // This allows us to check if the data has been loaded in or not\n        this.loaded = true;\n        resolve(true);\n\n      });\n\n\n    });\n\n  }\n\n  save(): void {\n    // Save the current array of notes to storage\n    this.storage.set('notes', this.notes);\n    this.load();\n  }\n\ngetAllNote(): Observable < Note[] > {\n  return this.http.get<Note[]>('http://localhost:8080/note/all');\n}\n\n\n\n  getNote(id): Observable<Note> {\n    // Return the note that has an id matching the id passed in\n    // console.log(this.http.get('http://localhost:8080/note/all'));\n    // tslint:disable-next-line:prefer-const\n\n    return this.http.get<Note>('http://localhost:8080/note/all/' + id);\n    // return this.notes.find(note => note.id === id);\n  }\n/*\n  createNote(title, content): void {\n\n    // Create a unique id that is one larger than the current largest id\n    // tslint:disable-next-line:radix\n    const id = Math.max(...this.notes.map(note => parseInt(note.id)), 0) + 1;\n\n    this.notes.push({\n      id: id.toString(),\n      title,\n      content: ''\n    });\n\n    this.save();\n\n  }\n*/\n\n  createNote(title: string, content: string, color: string): void {\n\n    // Create a unique id that is one larger than the current largest id\n    // tslint:disable-next-line:radix\n    const id = Math.max(...this.notes.map(note => parseInt(note.id)), 0) + 1;\n\n    this.notes.push({\n      id_user: '',\n      id: id.toString(),\n      title,\n      content, color\n\n    });\n\n    this.save();\n    console.log('ok') ;\n    // mettere color e id\n    // this.http.post('http://localhost:8080/note/add?title=' + title + '\n    // &content=' + content + '&user=lor'+ &color=' + color + '&id='+id , '').\n\n    this.http.post('http://localhost:8080/note/add?title=' + title + '&content=' + content + '&user=lor' + '&color=' + color, '').\n    subscribe(response => console.log(response));\n  }\n\n  deleteNote(id): void {\n\n    // Get the index in the array of the note that was passed in\n\n    console.log(id) ;\n\n    this.http.delete('http://localhost:8080/note?id=' + (id)).subscribe(response => console.log(response));\n  /*  {\n      console.log(data);\n      this.result = data;\n    }, error =>\n    {\n      console.log(error);\n    }, () =>\n    {\n      console.log('complete!');\n    });*/\n// localhost:8080/note?id=2\n    // Delete that element of the array and resave the data\n\n    this.save();\n }\n\n\n\n}\n// prova2\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n"]}